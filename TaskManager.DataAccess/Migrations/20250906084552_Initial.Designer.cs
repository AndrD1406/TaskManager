// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TaskManager.DataAccess;

#nullable disable

namespace TaskManager.DataAccess.Migrations
{
    [DbContext(typeof(TaskManagerDbContext))]
    [Migration("20250906084552_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.19")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TaskManager.DataAccess.Models.AppTask", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex("UserId", "DueDate");

                    b.HasIndex("UserId", "Priority");

                    b.HasIndex("UserId", "Status");

                    b.ToTable("Tasks");

                    b.HasData(
                        new
                        {
                            Id = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaa1"),
                            CreatedAt = new DateTime(2025, 9, 6, 8, 45, 51, 905, DateTimeKind.Utc).AddTicks(8352),
                            Priority = 2,
                            Status = 1,
                            Title = "Prepare inaugural address",
                            UpdatedAt = new DateTime(2025, 9, 6, 8, 45, 51, 905, DateTimeKind.Utc).AddTicks(8352),
                            UserId = new Guid("11111111-1111-1111-1111-111111111111")
                        },
                        new
                        {
                            Id = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaa2"),
                            CreatedAt = new DateTime(2025, 9, 6, 8, 45, 51, 905, DateTimeKind.Utc).AddTicks(8352),
                            Priority = 2,
                            Status = 0,
                            Title = "Draft emancipation policy",
                            UpdatedAt = new DateTime(2025, 9, 6, 8, 45, 51, 905, DateTimeKind.Utc).AddTicks(8352),
                            UserId = new Guid("22222222-2222-2222-2222-222222222222")
                        });
                });

            modelBuilder.Entity("TaskManager.DataAccess.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("UserName")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111111"),
                            CreatedAt = new DateTime(2025, 9, 6, 8, 45, 51, 906, DateTimeKind.Utc).AddTicks(597),
                            Email = "george.washington@gmail.com",
                            PasswordHash = "$2a$11$Dq8aYh4wU0os5huKz1.9O.0e1l4Q8wWRHw9ZFb7De5OIfp9wJQW6W",
                            UpdatedAt = new DateTime(2025, 9, 6, 8, 45, 51, 906, DateTimeKind.Utc).AddTicks(597),
                            UserName = "george.washington"
                        },
                        new
                        {
                            Id = new Guid("22222222-2222-2222-2222-222222222222"),
                            CreatedAt = new DateTime(2025, 9, 6, 8, 45, 51, 906, DateTimeKind.Utc).AddTicks(597),
                            Email = "abraham.lincoln@gmail.com",
                            PasswordHash = "$2a$11$Dq8aYh4wU0os5huKz1.9O.0e1l4Q8wWRHw9ZFb7De5OIfp9wJQW6W",
                            UpdatedAt = new DateTime(2025, 9, 6, 8, 45, 51, 906, DateTimeKind.Utc).AddTicks(597),
                            UserName = "abraham.lincoln"
                        });
                });

            modelBuilder.Entity("TaskManager.DataAccess.Models.AppTask", b =>
                {
                    b.HasOne("TaskManager.DataAccess.Models.User", "User")
                        .WithMany("Tasks")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("TaskManager.DataAccess.Models.User", b =>
                {
                    b.Navigation("Tasks");
                });
#pragma warning restore 612, 618
        }
    }
}
